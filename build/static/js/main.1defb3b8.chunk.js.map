{"version":3,"sources":["Components/Styles.js","Components/PageHeader.js","Components/EmployeeData/EmployeeService.js","Components/EmployeeData/Styles.js","Components/EmployeeData/useForm.js","Components/EmployeeData/Employee/EmployeeForm.js","Components/EmployeeData/Employee/EmployeeTable.js","Components/EmployeeData/Employee/PopUpWindow.js","Components/Notifications/Notification.js","Components/Notifications/ConfirnDialog.js","Components/EmployeeData/Employee/Employee.js","Components/Header.js","Components/SideBar.js","App.js","index.js"],"names":["useStyles","makeStyles","mainComponents","display","flexDirection","sidebar","position","width","height","top","backgroundColor","header","paddingLeft","minWidth","appbar","transform","padding","marginRight","searchbar","opacity","fontSize","border","borderRadius","pageheader","pagehead","color","pageicon","pagetitle","confirmdialog","PageHeader","pagedescription","classes","Paper","round","elevation","className","Card","Typography","variant","component","KEYS","insertEmployeeData","data","employees","getAllEmployees","localStorage","getItem","setItem","id","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","depart","map","x","departmentId","theme","inputdata","marginBottom","formpage","margin","dateContainer","formButton","marginTop","textTransform","table","fontWeight","searchToolbar","employeeSearch","addButton","right","dialogWrapper","actionBtndelete","actionBtnedit","useForm","initialData","addAndEdit","recordForEdit","useState","values","setvalues","error","setError","validate","name","temp","console","log","fullName","email","test","mobileNo","length","Object","every","entry","handleResetForm","useEffect","handleInputData","e","target","value","handleInputCheckbox","ispermanent","checked","handleInputDate","hireDate","handleFormSubmit","preventDefault","gender","city","format","Date","department","genders","EmployeeForm","autoComplete","onSubmit","Grid","container","item","xs","TextField","label","onChange","helperText","FormControl","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","style","InputLabel","Select","MenuItem","Box","type","fullWidth","defaultValue","InputLabelProps","shrink","FormGroup","Checkbox","buttondiv","Button","onClick","EmployeeTable","handleAddNewEmployee","record","openInPopup","handleDeletingData","pages","page","setpage","rowsPerPage","setrowsPerPage","order","setorder","orderBy","setorderBy","fn","items","filterFn","setfilterFn","labels","descendingComparator","a","b","sortedAndPagingData","slice","sort","getComparator","TableContainer","Toolbar","InputProps","startAdornment","InputAdornment","Search","filter","toLowerCase","includes","startIcon","Add","Table","TableHead","TableRow","headcell","TableCell","sortDirection","TableSortLabel","active","direction","TableBody","employee","tr","EditOutlined","Close","TablePagination","rowsPerPageOptions","count","onPageChange","event","newpage","onRowsPerPageChange","PopUpWindow","children","openPopUp","handleWindowClose","Dialog","open","maxWidth","DialogTitle","paddingRight","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleclose","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","ConfirnDialog","confirmDialog","deleteEmployee","deningConfirmDialog","IconButton","disableRipple","size","marginLeft","NotListedLocation","title","subtitle","DialogActions","Employee","employeeService","setRecords","setopenPopUp","setrecordForEdit","isopen","setConfirmDialog","PeopleOutlineTwoTone","recordIndex","findIndex","Header","AppBar","alignItems","InputBase","placeholder","sm","Badge","badgeContent","overlap","NotificationsNone","ChatBubbleOutline","PowerSettingsNew","SideBar","App","CssBaseline","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.1defb3b8.chunk.js","sourcesContent":["\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n    mainComponents:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n},\r\n\r\n\r\n    sidebar:{\r\n        \r\n        position: 'absolute',\r\n        width: '150px',\r\n        height: '150%',\r\n        top: '0',\r\n        backgroundColor: '#526722',\r\n        // media queries\r\n        '@media (max-width: 912px)': {\r\n          width: '0',\r\n        }\r\n    },\r\n    header:{\r\n        paddingLeft:'150px',\r\n        width: '100%',\r\n        // media queries\r\n        '@media (max-width: 912px)': {\r\n          paddingLeft: '0',\r\n          minWidth: '700px'\r\n        }\r\n    },\r\n    appbar: {\r\n        backgroundColor : '#fff',\r\n        transform: 'translateZ(0)',\r\n        padding: '5px 5px',\r\n        '& .MuiSvgIcon-root': {\r\n                marginRight: '8px'\r\n        }\r\n    },\r\n    searchbar: {\r\n        padding: '0px 8px',\r\n        opacity: '0.6',\r\n        fontSize: '0.8rem',\r\n        border: '1px solid #000',\r\n        borderRadius: '5px',\r\n        '&:hover': {\r\n        backgroundColor: '#f2f2f2'\r\n        }\r\n\r\n    },\r\n    pageheader: {\r\n        backgroundColor: '#f1f1f1',\r\n    },\r\n    pagehead: {\r\n        display: 'flex',\r\n        padding: '1.5rem',\r\n        color: '#3c44b1'\r\n    },\r\n    pageicon: {\r\n        display: 'inline-block',\r\n        padding: '1rem',\r\n        borderRadius: '10px'\r\n    },\r\n   \r\n    pagetitle: {\r\n        padding: '1rem'\r\n    },\r\n\r\n    \r\n\r\n    confirmdialog: {\r\n    '& .MuiDialog-paper': {\r\n        padding: '5px',\r\n        position: 'absolute',\r\n        top: '60px',\r\n}\r\n},\r\n\r\n})\r\nexport default useStyles","import { Card, Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport useStyles from './Styles'\r\n\r\nconst PageHeader = ({pagetitle, pagedescription, pageicon}) => {\r\n    const classes = useStyles()\r\n\r\n  return (\r\n    <Paper round='true' elevation={0} className={classes.pageheader}>\r\n        <div className={classes.pagehead}>\r\n            <Card className={classes.pageicon}>\r\n            {pageicon}\r\n            </Card>\r\n            <div className={classes.pagetitle}>\r\n                <Typography variant='h6' component='div'>\r\n                {pagetitle}\r\n                </Typography>\r\n                <Typography variant='subtitle2' component='div'>\r\n                {pagedescription}\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","\r\n\r\nconst KEYS ={\r\n    employeeId: 'employeeId',\r\n    employees: 'employees'\r\n}\r\n\r\nexport function getdepartments(){\r\n        \r\n    return  [{id: '1', depart: 'Web Development'},\r\n                {id: '2', depart: 'SQA'},\r\n                {id: '3', depart: 'HR'},\r\n                {id: '4', depart: 'Management'}]\r\n\r\n}\r\n\r\nexport function headCells(){\r\n        \r\n    return      [{id: '1', name: 'fullName',label: 'Employee Name'},\r\n                {id: '2', name: 'email',label: 'Email'},\r\n                {id: '3', name: 'contactNo',label: 'Conatct No.'},\r\n                {id: '4', name:'department', label: 'Department'},\r\n                {id: '5', name:'actionButtons', label: 'Actions'}\r\n            ]\r\n\r\n}\r\n\r\n    export function insertEmployeeData(data){\r\n        let employees = getAllEmployees();\r\n        data['id']= generateEmployeeId()\r\n        employees.push(data)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n    }\r\n\r\n    export function generateEmployeeId() {\r\n        if(localStorage.getItem(KEYS.employeeId)==null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n        var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n        localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n\r\n        return id;\r\n    }\r\n\r\n    export function updateEmployee(data) {\r\n        let employees = getAllEmployees();\r\n        const recordIndex = employees.findIndex(x=> x.id===data.id)\r\n        employees[recordIndex] = {...data}\r\n        localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n    }\r\n\r\n    export function deleteEmployeeData(id){\r\n        let employees = getAllEmployees();\r\n        employees = employees.filter(x=> x.id !== id)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n    }\r\n\r\n    export function getAllEmployees() {\r\n        if(localStorage.getItem(KEYS.employees)==null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n\r\n        const employees = JSON.parse(localStorage.getItem(KEYS.employees))\r\n        let departments = getdepartments()\r\n         employees.map( x =>(\r\n                x['department'] = departments[x.departmentId - 1].depart\r\n        ))\r\n        return employees\r\n    }\r\n\r\n    \r\n    \r\n   \r\n\r\n \r\n\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    inputdata:{\r\n        width: '80%',\r\n        marginBottom: '10px'\r\n    },\r\n    formpage: {\r\n        padding: '1rem',\r\n        margin: '2rem'\r\n    },\r\n    dateContainer: {\r\n        margin: '20px 0',\r\n        width: '80%'\r\n    },\r\n   \r\n    formButton: {\r\n        marginRight: '1rem',\r\n        marginTop: '2rem',\r\n        textTransform: 'none'\r\n    },\r\n\r\n    table: {\r\n        '& th':{\r\n            fontWeight: '700',\r\n            backgroundColor: '#D3D3D3',\r\n        },\r\n    \r\n    '& tbody tr:hover': {\r\n            backgroundColor: '#CCE7E7',\r\n        }\r\n    },\r\n  searchToolbar: {\r\n    margin: '10px'},\r\n    \r\n    employeeSearch: {\r\n        width: '70%'\r\n    },\r\n\r\n    addButton: {\r\n        position: \"absolute\",\r\n        right: '10px'\r\n    },\r\n\r\n    dialogWrapper: {\r\n        '& .MuiPaper-root':{\r\n            position: 'absolute',\r\n            top: '10px',\r\n            padding: '1rem'\r\n    }},\r\n\r\n    actionBtndelete: {\r\n       minWidth: '0',\r\n       margin: '4px',\r\n       padding: '2px',\r\n       backgroundColor: '#FFCCCB',\r\n       color: 'red',\r\n    },\r\n    actionBtnedit: {\r\n        minWidth: '0',\r\n        margin: '4px',\r\n        padding: '2px',\r\n        backgroundColor: '#ADD8E6',\r\n        color: 'blue',\r\n     },\r\n\r\n     \r\n\r\n}))\r\n\r\nexport default useStyles","import {useState, useEffect} from 'react'\r\n\r\nconst useForm = (initialData, addAndEdit, recordForEdit) => {\r\n  const [values, setvalues] = useState(initialData)\r\n  const [error, setError] = useState({})\r\n    \r\n    const handleInputData = e =>{\r\n       const {name, value} = e.target\r\n       setvalues({\r\n        ...values,\r\n        [name]: value\r\n       })\r\n       validate(name)\r\n    }\r\n    \r\n    const handleInputCheckbox= e =>{\r\n      setvalues({\r\n        ...values,\r\n        ispermanent: e.target.checked\r\n      })\r\n    }\r\n    \r\n    const handleInputDate=e=>{\r\n      setvalues({\r\n        ...values,\r\n        hireDate: e.target.value\r\n      })\r\n    }\r\n  \r\n\r\n    const validate=(name='')=>{\r\n      let temp={}\r\n      console.log(name)\r\n      if(name==='fullName') {temp.fullName = values.fullName?'':'This field is required'}\r\n      else if(name==='email') {temp.email = (values.email ==='' || (/\\S+@\\S+\\.\\S+/).test(values.email))  ? '':'Email is not valid'}\r\n      else if(name==='mobileNo'){  temp.mobileNo = values.mobileNo.length >= 10 ?'':'Required 11 digits minimum'}\r\n      \r\n      else if(name==='all'){\r\n      temp.fullName = values.fullName?'':'This field is required'\r\n      temp.email = (values.email ==='' || (/\\S+@\\S+\\.\\S+/).test(values.email))  ? '':'Email is not valid'\r\n      temp.mobileNo = values.mobileNo.length >= 10 ?'':'Required 11 digits minimum'}\r\n      \r\n      setError({\r\n        ...temp\r\n      })\r\n      return Object.values(temp).every((entry)=> entry===\"\")\r\n    }\r\n\r\n    const handleFormSubmit=(e)=>{\r\n      e.preventDefault()\r\n      if(validate('all')){\r\n       addAndEdit(values, handleResetForm)\r\n      }\r\n    }\r\n    const handleResetForm=()=>{\r\n      setvalues(initialData)\r\n      setError({})\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(recordForEdit != null){\r\n          setvalues({\r\n              ...recordForEdit\r\n          })\r\n      }\r\n  },[recordForEdit])\r\n\r\n\r\n  return {\r\n    values,\r\n    handleInputData,\r\n    handleInputCheckbox,\r\n    handleInputDate,\r\n    handleFormSubmit,\r\n    error,\r\n    handleResetForm\r\n  }\r\n}\r\n\r\nexport default useForm\r\n","import { FormControlLabel, Grid, RadioGroup, TextField, InputLabel,MenuItem, Radio, \r\n    Select, FormControl, FormLabel, FormGroup, Checkbox, Button, Box} from '@material-ui/core'\r\nimport { format } from 'date-fns'\r\nimport { getdepartments } from '../EmployeeService'\r\nimport useStyles from '../Styles'\r\nimport useForm  from '../useForm'\r\n\r\nconst initialData = {\r\n    id: '',\r\n    fullName: '',\r\n    email: '',\r\n    mobileNo: '',\r\n    gender: 'male',\r\n    city: '',\r\n    departmentId: '',\r\n    hireDate: (format(new Date(), 'yyyy-MM-dd')),\r\n    ispermanent: false\r\n}\r\nconst department = getdepartments()\r\n\r\nconst genders = [{id: 'male', gender: 'Male'},\r\n                {id: 'female', gender: 'Female'},\r\n                {id: 'other', gender: 'Other'}]\r\n\r\nconst EmployeeForm = ( {addAndEdit, recordForEdit}) => {\r\n    const classes = useStyles()\r\n    const {values, handleInputData, handleInputDate, handleInputCheckbox, \r\n           error, handleFormSubmit, handleResetForm} = useForm(initialData, addAndEdit, recordForEdit)\r\n    \r\n\r\n  return (\r\n    <>\r\n        <form autoComplete='off' onSubmit={handleFormSubmit}>\r\n            <Grid container >\r\n                <Grid item xs ={6}>\r\n                <TextField className={classes.inputdata} \r\n                name='fullName' \r\n                variant='outlined' \r\n                label='Full Name' \r\n                value={values.fullName} \r\n                onChange={handleInputData}\r\n                {...(error.fullName && {error:true,\r\n                    helperText: error.fullName})}\r\n                     >\r\n                </TextField>\r\n\r\n                <TextField className={classes.inputdata} \r\n                name='email'  \r\n                variant='outlined' \r\n                label='email ID' \r\n                value={values.email}\r\n                onChange={handleInputData}\r\n                {...(error.email && {error:true,\r\n                    helperText: error.email})}\r\n                ></TextField>\r\n\r\n                <TextField className={classes.inputdata} \r\n                name='mobileNo' \r\n                variant='outlined' \r\n                label='Mobile NO.' \r\n                value={values.mobileNo}\r\n                onChange={handleInputData}\r\n                {...(error.mobileNo && {\r\n                    error:true,\r\n                    helperText: error.mobileNo\r\n                })}\r\n                ></TextField>\r\n\r\n                <TextField className={classes.inputdata} \r\n                name='city'  \r\n                variant='outlined' \r\n                label='City' \r\n                value={values.city}\r\n                onChange={handleInputData}\r\n                ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <FormControl>\r\n                        <FormLabel>Gender</FormLabel>\r\n                            <RadioGroup row name='gender' value={values.gender} onChange={handleInputData}>\r\n                            {genders.map((item)=>(\r\n                                <FormControlLabel key={item.id} value={item.id} label={item.gender} control={<Radio />}/>\r\n                            ))}\r\n                            </RadioGroup>      \r\n                    </FormControl>\r\n                    <FormControl  style={{marginTop: '10px', width: '80%'}} {...(error.departmentId && {error:true})}>\r\n                         <InputLabel>Department</InputLabel>\r\n                         <Select\r\n                         name='departmentId'\r\n                         value={values.departmentId}\r\n                         label=\"Department\"\r\n                        onChange={handleInputData} >\r\n                            {department.map((department)=>(\r\n                                <MenuItem key={department.id} value={department.id}>{department.depart}</MenuItem>\r\n                            ))}\r\n                         </Select>\r\n                    </FormControl>\r\n\r\n                    <Box className={classes.dateContainer}>\r\n                        <TextField id='date'\r\n                        label= 'Date of Joining'\r\n                        type='date'\r\n                        fullWidth\r\n                        variant='outlined'\r\n                        defaultValue={values.hireDate}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }} onChange={handleInputDate}\r\n                        >\r\n                        </TextField>\r\n                    </Box>\r\n\r\n                    <FormGroup>\r\n                         <FormControlLabel control={<Checkbox name='ispermanent' checked={values.ispermanent}\r\n                          onChange={handleInputCheckbox}/>} label=\"Permanent Employee\" />\r\n                    </FormGroup>\r\n\r\n                    <div className={classes.buttondiv}>\r\n                    <Button className={classes.formButton} type='button' variant='outlined' onClick={handleResetForm}>Reset</Button>\r\n                    <Button className={classes.formButton} type='submit' variant='contained' color='primary'>Submit</Button>\r\n                </div>\r\n                  \r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EmployeeForm\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination,TextField, TableRow, \r\n  TableSortLabel,  Toolbar, InputAdornment, Button } from '@material-ui/core'\r\nimport { Add, Close, EditOutlined, Search } from '@material-ui/icons'\r\nimport React, {useState} from 'react'\r\nimport * as employeeService from '../EmployeeService'\r\nimport useStyles from '../Styles'\r\n\r\nconst EmployeeTable = ({handleAddNewEmployee, record, openInPopup, handleDeletingData}) => {\r\n\r\n    const classes = useStyles()\r\n    const pages = [5,10,15]\r\n    const [page, setpage] = useState(0)\r\n    const [rowsPerPage, setrowsPerPage] = useState(pages[page])\r\n    const [order, setorder] = useState('asc')\r\n    const [orderBy, setorderBy] = useState('')\r\n    const [filterFn, setfilterFn] = useState({fn: items=>{return items}})\r\n\r\n    const labels = employeeService.headCells()\r\n\r\n    const handleChangePage=(event, newpage)=>{\r\n          setpage(newpage)\r\n          }\r\n\r\n    const handleRowsperpage=event=>{\r\n          setrowsPerPage(parseInt(event.target.value, 10))\r\n          setpage(0)\r\n          }\r\n          \r\n    const createSortHandler = id =>{\r\n          const isAsc = orderBy === id && order === \"asc\"\r\n          setorder(isAsc ? \"desc\":\"asc\")\r\n          setorderBy(id)\r\n    } \r\n\r\n    const handleEmployeeSearch=(e)=>{\r\n      let target = e.target\r\n          setfilterFn({ fn: items =>{\r\n            if(target.value==='') return items\r\n            else return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n          }})\r\n    }\r\n\r\n//Sorting Functions//\r\n    function descendingComparator(a, b, orderBy) {\r\n\r\n      if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n      }\r\n      if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n    \r\n    function getComparator(order, orderBy) {\r\n  \r\n      return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy)\r\n    }\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    const sortedAndPagingData =  filterFn.fn(record).slice(page*rowsPerPage, \r\n      (page + 1)*rowsPerPage).sort(getComparator(order, orderBy))\r\n\r\n  return (\r\n    <>    \r\n    <TableContainer>\r\n      <Toolbar className={classes.searchToolbar}>\r\n      <TextField label='Search Employee'\r\n                className={classes.employeeSearch}\r\n                name='employeeSearch'\r\n                variant='outlined'\r\n                InputProps={{\r\n                    startAdornment: ( <InputAdornment position= 'start'>\r\n                                      <Search  /> \r\n                                  </InputAdornment>) \r\n                }}\r\n                onChange={handleEmployeeSearch}\r\n                >\r\n      </TextField> \r\n      <Button variant='outlined' \r\n              type='button'\r\n              className={classes.addButton}\r\n              startIcon= {\r\n                <Add />\r\n              }\r\n              onClick={handleAddNewEmployee}\r\n      >Add new</Button>\r\n\r\n      </Toolbar>\r\n      <Table className={classes.table}>\r\n        <TableHead >\r\n          <TableRow>\r\n          {labels.map((headcell)=>(\r\n            <TableCell key={headcell.id} sortDirection={orderBy===headcell.id?order:false}>\r\n            <TableSortLabel\r\n              active={orderBy === headcell.name}\r\n              direction={orderBy === headcell.name ? order : 'asc'}\r\n              onClick={()=> {createSortHandler(headcell.name)}}\r\n            >\r\n              {headcell.label}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { sortedAndPagingData.map((employee)=> (\r\n          <TableRow className={classes.tr} key={employee.id}>\r\n            <TableCell>{employee.fullName}</TableCell>\r\n            <TableCell>{employee.email}</TableCell>\r\n            <TableCell>{employee.mobileNo}</TableCell>\r\n            <TableCell>{employee.department}</TableCell>\r\n            <TableCell>\r\n            <div style={{display: 'flex'}}>\r\n              <Button variant='outlined' \r\n              className={classes.actionBtnedit}\r\n              onClick={()=>{openInPopup(employee)}}\r\n              >\r\n              <EditOutlined fontSize='small'/>\r\n              </Button>\r\n              <Button variant='outlined'  \r\n              className={classes.actionBtndelete}\r\n              onClick={handleDeletingData}>\r\n              <Close fontSize='small'/>\r\n              </Button>\r\n              </div>\r\n            </TableCell>\r\n          </TableRow> ))}\r\n        </TableBody>\r\n        \r\n      </Table>\r\n      <TablePagination \r\n          component='div'\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={pages}\r\n          count={record.length}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleRowsperpage}\r\n        />\r\n    </TableContainer>    \r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default EmployeeTable\r\n","import { Button, Dialog, DialogContent, DialogTitle, Typography} from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport useStyles from '../Styles'\r\n\r\nconst PopUpWindow = ({children, openPopUp, handleWindowClose}) => {\r\n    const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog open={openPopUp} maxWidth='md' className={classes.dialogWrapper}>\r\n        <DialogTitle style={{paddingRight: '0px'}} >\r\n            <div style={{display: 'flex'}} >\r\n                <Typography variant='h6' component='div' style={{flexGrow: 1}}>\r\n                    Employee Form\r\n                </Typography>\r\n                <Button variant='contained' onClick={handleWindowClose} className={classes.actionBtndelete}><Close /></Button>\r\n            </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers >\r\n            {children}\r\n        </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default PopUpWindow\r\n","import { Snackbar } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport React from 'react'\r\n\r\nconst Notification = ({notify, setNotify}) => {\r\n    const handleclose=()=>{\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        })\r\n    }\r\n  return (\r\n    <Snackbar open={notify.isOpen} \r\n    autoHideDuration={3000}\r\n    anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n    onClose={handleclose}\r\n    style={{top: '85px', right: '30px'}}\r\n    >\r\n        <Alert severity={notify.type}\r\n        onClose={handleclose}>\r\n            {notify.message}\r\n        </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import { Dialog, DialogActions, DialogContent, DialogTitle,Button, Typography, IconButton } from '@material-ui/core'\r\nimport useStyles from '../Styles'\r\nimport React from 'react'\r\nimport { NotListedLocation } from '@material-ui/icons'\r\n\r\nconst ConfirnDialog = ({confirmDialog, deleteEmployee, deningConfirmDialog}) => {\r\n\r\n    const classes = useStyles()\r\n  return (\r\n    <Dialog open={confirmDialog.isOpen}\r\n            className={classes.confirmdialog}>\r\n        <DialogTitle >\r\n             <IconButton disableRipple size='large' style={{marginLeft: '100px'}}>\r\n                <NotListedLocation fontSize='large' />\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <Typography variant='h6'>{confirmDialog.title}</Typography>\r\n            <Typography variant='subtitle2'>{confirmDialog.subtitle}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button variant='contained' color= 'secondary' \r\n            onClick={deningConfirmDialog}\r\n            >No</Button>\r\n            <Button variant='contained' color= 'primary' onClick={deleteEmployee}>Yes</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default ConfirnDialog\r\n","import React, {useState} from 'react'\r\nimport PageHeader from '../../PageHeader'\r\nimport EmployeeForm from './EmployeeForm'\r\nimport EmployeeTable from './EmployeeTable'\r\nimport PopUpWindow from './PopUpWindow'\r\nimport * as employeeService from '../EmployeeService'\r\nimport { Paper } from '@material-ui/core'\r\nimport {  PeopleOutlineTwoTone } from '@material-ui/icons'\r\nimport useStyles from '../Styles'\r\nimport Notification from '../../Notifications/Notification'\r\nimport ConfirnDialog from '../../Notifications/ConfirnDialog'\r\n\r\n\r\nconst Employee = () => {\r\n  \r\n  const [record, setRecords] = useState(employeeService.getAllEmployees())\r\n    const classes = useStyles()\r\n    const [openPopUp, setopenPopUp] = useState(false)\r\n    const [recordForEdit, setrecordForEdit] = useState(null)\r\n    const [notify, setNotify] = useState({isopen: false, message: '', type:''})\r\n    const [confirmDialog, setConfirmDialog] = useState({isOpen: false, title: '', subtitle:''})\r\n\r\n    const handleAddNewEmployee=()=>{\r\n       setopenPopUp(true)\r\n       setrecordForEdit(null)\r\n    }\r\n     const handleWindowClose=()=>{\r\n      setopenPopUp(false) \r\n     }\r\n     const addAndEdit = (values, handleResetForm)=>{\r\n      if(values.id===0) employeeService.insertEmployeeData(values)\r\n        else employeeService.updateEmployee(values)\r\n        setrecordForEdit(null)\r\n        handleResetForm()\r\n        setopenPopUp(false)\r\n        setNotify({\r\n          isOpen: true,\r\n          message: 'Submitted Successfully',\r\n          type: 'Success'\r\n        })\r\n        setRecords(employeeService.getAllEmployees())\r\n     }\r\n\r\n     const openInPopup=(item)=>{\r\n      setopenPopUp(true)\r\n      setrecordForEdit(item)\r\n     }\r\n\r\n     const deleteEmployee=(id)=>{\r\n        employeeService.deleteEmployeeData(id)\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n          isOpen: true,\r\n          message: 'Deleted Successfully',\r\n          type: 'error'          \r\n        })\r\n      }\r\n     \r\n\r\n     const deningConfirmDialog=()=>{\r\n      setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n      })\r\n     }\r\n\r\n     const handleDeletingData=()=>{\r\n      setConfirmDialog({\r\n        title: 'Are you sure to delete Data?',\r\n        subtitle: \"You will not be able to undo.\",\r\n        isOpen: true\r\n      })\r\n     }\r\n  return (\r\n    <>\r\n        <PageHeader  pagetitle= 'Employee'\r\n              pagedescription='Employee Data Management System'\r\n              pageicon={<PeopleOutlineTwoTone fontSize='large'/>}\r\n            />\r\n            <Paper className={classes.formpage}>\r\n            \r\n            <EmployeeTable handleAddNewEmployee= {handleAddNewEmployee} \r\n            record={record} openInPopup={openInPopup} \r\n            handleDeletingData={handleDeletingData}\r\n\r\n            />\r\n            </Paper>\r\n            <PopUpWindow  openPopUp={openPopUp} handleWindowClose={handleWindowClose}>\r\n            <EmployeeForm addAndEdit={addAndEdit} recordForEdit={recordForEdit}/>\r\n            </PopUpWindow>\r\n            <Notification notify={notify} setNotify={setNotify}/>\r\n            <ConfirnDialog confirmDialog={confirmDialog} \r\n                            deleteEmployee={deleteEmployee}\r\n                            deningConfirmDialog={deningConfirmDialog}\r\n            />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Employee\r\n","import { AppBar, Grid, IconButton, InputBase,  Badge, Toolbar } from '@material-ui/core'\r\nimport { ChatBubbleOutline, NotificationsNone, PowerSettingsNew, Search } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport useStyles from './Styles'\r\n\r\nconst Header = () => {\r\n    const classes = useStyles()\r\n  return (       \r\n            <AppBar position='static' className={classes.appbar}>\r\n                <Toolbar>\r\n                    <Grid container alignItems='center'>\r\n                         <Grid item >\r\n                            <InputBase className={classes.searchbar} placeholder='Employee Database'\r\n                              startAdornment={ <Search fontSize='small' /> }\r\n                            />\r\n                         </Grid>\r\n                         <Grid item sm></Grid>\r\n                         <Grid item >\r\n                         <IconButton>\r\n                         <Badge badgeContent={4} color='secondary' fontSize='small' overlap='rectangular'>\r\n                          <NotificationsNone  fontSize='small' />\r\n                         </Badge>\r\n                         </IconButton>\r\n\r\n                         <IconButton>\r\n                         <Badge badgeContent={4} color='primary' fontSize='small' overlap='rectangular'>\r\n                          <ChatBubbleOutline fontSize='small'/>\r\n                         </Badge>\r\n                         </IconButton>\r\n\r\n                         <IconButton>\r\n                          <PowerSettingsNew fontSize='small' />\r\n                         </IconButton>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n\r\n      \r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport useStyles from './Styles'\r\n\r\nconst SideBar = () => {\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n    <>\r\n      <div className={classes.sidebar}>\r\n      </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import { CssBaseline } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Employee from './Components/EmployeeData/Employee/Employee'\r\nimport Header from './Components/Header'\r\nimport SideBar from './Components/SideBar'\r\nimport useStyles from './Components/Styles'\r\n\r\nconst App = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n        <CssBaseline/>\r\n        <div className= {classes.mainComponents}>\r\n            <SideBar /> \r\n            <div className={classes.header}>\r\n              <Header />\r\n              <Employee />\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import {createRoot} from 'react-dom/client'\r\nimport App from './App'\r\nconst rootElement = document.getElementById('root')\r\nconst root = createRoot(rootElement)\r\n\r\n        root.render(\r\n                <App />\r\n        )\r\n\r\n"],"sourceRoot":""}